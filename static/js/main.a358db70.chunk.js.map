{"version":3,"sources":["static/avatar.jpg","data.js","components/TabView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TabData","name","posts","title","content","useStyles","makeStyles","root","flexGrow","backgroundColor","height","display","flexDirection","flex","boxStyles","justifyContent","flexWrap","avatarStyles","width","margin","cardStyles","minWidth","maxWidth","tabStyles","selected","TabPanel","props","children","value","index","other","boxClasses","role","hidden","id","aria-labelledby","style","Box","classes","TabView","avatarClasses","cardClasses","tabClasses","React","useState","setValue","className","AppBar","position","Tabs","onChange","event","newValue","aria-label","map","tabData","Tab","label","a11yProps","Avatar","alt","src","avatar","Card","CardContent","Typography","gutterBottom","variant","CardActions","Button","post","CardActionArea","component","color","size","App","Container","disableGutters","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a358db70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.b3f30405.jpg\";","export const TabData = [\n  {\n    name: \"About\",\n  },\n  {\n    name: \"Blog\",\n    posts: [\n      {\n        title: \"Placeholder title for the first post\",\n        content: \"Placeholder content\",\n      },\n      {\n        title: \"This is going to be replaced by the second post\",\n        content: \"Again, placeholder content\",\n      },\n      {\n        title: \"Another day another placeholder\",\n        content: \"What did you expect? Another placeholder it is!\",\n      },\n    ],\n  },\n  {\n    name: \"Shitpost\",\n  },\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\n\nimport avatar from \"../static/avatar.jpg\";\nimport { TabData } from \"../data.js\";\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: \"#f5f5f5\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: \"1 auto\",\n  },\n});\n\nconst boxStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n  },\n});\nconst avatarStyles = makeStyles({\n  root: {\n    width: 300,\n    height: 300,\n    margin: 20,\n  },\n});\nconst cardStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    maxWidth: 400,\n    margin: 20,\n  },\n});\nconst tabStyles = makeStyles({\n  root: {\n    maxWidth: \"unset\",\n  },\n  selected: {\n    flexGrow: 1,\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  const boxClasses = boxStyles();\n\n  if (value === index)\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flexGrow: 1,\n          justifyContent: \"center\",\n        }}\n        {...other}\n      >\n        <Box classes={boxClasses}>{children}</Box>\n      </div>\n    );\n  else return <div />;\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function TabView() {\n  const classes = useStyles();\n  const avatarClasses = avatarStyles();\n  const cardClasses = cardStyles();\n  const tabClasses = tabStyles();\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"Navigation tabs\"\n        >\n          {TabData.map((tabData, index) => {\n            return (\n              <Tab\n                label={tabData.name}\n                classes={tabClasses}\n                {...a11yProps(index)}\n              />\n            );\n          })}\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n        <Avatar alt=\"Shreevari SP\" src={avatar} classes={avatarClasses} />\n        <Card classes={cardClasses}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Shreevari SP\n            </Typography>\n            <Typography gutterBottom>\n              I'm @shreevari on Twitter, Github and IRC. You can also find me as\n              s_p on IRC.\n            </Typography>\n            <Typography>\n              E-mail: shreevari[dot]sp[at]protonmail[dot]com (Please mention\n              that you got my email from here.)\n            </Typography>\n            <Typography id=\"call-policy\">\n              Phone: +91 98867 39496 (I don't prefer calls)\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button>Download Resume</Button>\n          </CardActions>\n        </Card>\n        <Card classes={cardClasses}>\n          <CardContent>\n            <Typography gutterBottom>I love Rust.</Typography>\n            <Typography gutterBottom>\n              Computers are rocks that we tricked into thinking.\n            </Typography>\n            <Typography gutterBottom>Multimedia geek.</Typography>\n            <Typography gutterBottom>\n              I'm heavily influenced by Mozilla. Check out their\n              website(https://mozilla.org) to know why.\n            </Typography>\n          </CardContent>\n        </Card>\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n        {TabData[1].posts.map((post, index) => {\n          return (\n            <Card classes={cardClasses}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {post.title}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {post.content}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  Learn more\n                </Button>\n              </CardActions>\n            </Card>\n          );\n        })}\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n        <Typography>Oh, don't you worry! This will come soon(TM).</Typography>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"@material-ui/core/Container\";\nimport TabView from \"./components/TabView.js\";\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"lightgray\" }}>\n      <Container maxWidth=\"lg\" disableGutters={true}>\n        <TabView />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}